import streamlit as st
import requests
import seaborn as sns
import pandas as pd
import warnings
import matplotlib.pyplot as plt
from io import StringIO
import plotly.express as px
from datetime import datetime, timedelta


st.set_page_config(
    page_title="Datos hist칩ricos de potencia pico",
    page_icon="游놊",
    layout="wide",
)


def format_time(value):
    try:
        value = value.replace(',', '.')
        time_obj = datetime.strptime(value, '%H.%M')
        return time_obj.strftime('%H:%M')
    except:
        return None


def combine_date_time(row):
    try:
        fecha_obj = datetime.strptime(row['FECHA'], '%d/%m/%Y')
        hora_obj = datetime.strptime(row['hora_formateada'], '%H:%M')
        combined_datetime = fecha_obj.replace(hour=hora_obj.hour, minute=hora_obj.minute)
        return combined_datetime
    except:
        return None


@st.cache_data
def get_data() -> pd.DataFrame:
    data = pd.read_csv('./eda/data/cammesa/maximos_historicos.csv')
    data['Energ칤a SADI (GWh)'] = data['Energ칤a SADI (GWh)'].str.replace(',', '.').astype(float)
    data['Potencia Pico SADI (MW)'] = data['Potencia Pico SADI (MW)'].str.replace(',', '.').astype(float)
    data['Temperatura Media Diaria GBA  (춿C)'] = data['Temperatura Media Diaria GBA  (춿C)'].str.replace(',', '.').astype(float)
    data['hora_formateada'] = data['Hora Potencia Pico'].apply(format_time)
    data['FECHA y HORA'] = data.apply(combine_date_time, axis=1)
    return data


st.title('Datos hist칩ricos de potencia pico')

df_maximos = get_data()
with st.expander("Ver datos hist칩ricos"):
    st.dataframe(df_maximos)

tipo_dia = st.sidebar.multiselect(
    options=df_maximos['TIPO DIA'].unique(),
    default=df_maximos['TIPO DIA'].unique(),
    label="Seleccionar tipo de d칤a",
)

df_filter = df_maximos[df_maximos['TIPO DIA'].isin(tipo_dia)]

st.subheader("Evoluci칩n de generaci칩n de energ칤a a lo largo de los a침os")
fig = px.scatter(
    df_filter,
    x='FECHA y HORA',
    y='Energ칤a SADI (GWh)',
    color="VERANO / INVIERNO"
)
fig.update_layout(
    xaxis_title='A침os',
    yaxis_title='Energ칤a SADI (GWh)',
    title='Evoluci칩n de generaci칩n de energ칤a a lo largo de los a침os',
)
st.plotly_chart(fig, use_container_width=True, theme='streamlit')

st.subheader("Evoluci칩n de la potencia pico a lo largo de los a침os")
fig = px.scatter(
    df_filter,
    x='FECHA y HORA',
    y='Potencia Pico SADI (MW)',
    color="VERANO / INVIERNO"
)
fig.update_layout(
    xaxis_title='A침os',
    yaxis_title='Potencia Pico SADI (MW)',
    title='Evoluci칩n de la potencia pico a lo largo de los a침os',
)
st.plotly_chart(fig, use_container_width=True, theme='streamlit')


st.subheader("Temperatura media en los momentos pico (en GBA)")
fig = px.scatter(
    df_filter,
    x='FECHA y HORA',
    y='Temperatura Media Diaria GBA  (춿C)',
    color="VERANO / INVIERNO"
)
fig.update_layout(
    xaxis_title='A침os',
    yaxis_title='Temperatura Media Diaria GBA  (춿C)',
    title='Temperatura media en los momentos pico (en GBA)',
)
st.plotly_chart(fig, use_container_width=True, theme='streamlit')
